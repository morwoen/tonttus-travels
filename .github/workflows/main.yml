name: Actions üòé

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - TonttusTravels
        unityVersion:
          - 2019.4.17f1
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          # - Android # Build an Android player.
          - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - name: Normalise repo name üß∂
        id: repositoryName
        uses: mad9000/actions-find-and-replace-string@2
        with:
          source: ${{ github.repository }}
          find: '/'
          replace: '-'
      - name: Cache üßµ
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - name: Test üí•
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload test results ü™Ñ
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - name: Build üß±
        uses: game-ci/unity-builder@v2
        id: builder
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Zip Build üóúÔ∏è
        if: ${{ github.ref == 'refs/heads/main' && matrix.targetPlatform != 'WebGL' }}
        run: zip -r build/${{ matrix.targetPlatform }}.zip build/${{ matrix.targetPlatform }}
      - name: Clean build files üßπ
        if: ${{ github.ref == 'refs/heads/main' && matrix.targetPlatform != 'WebGL' }}
        run: rm -rf build/${{ matrix.targetPlatform }}
      - name: Copy portfolio files üóÉÔ∏è
        uses: canastro/copy-file-action@master
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          source: portfolio/.
          target: build
          flags: '-r'
      - name: Upload artifacts ü™Ñ
        uses: jakejarvis/s3-sync-action@master
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          AWS_S3_BUCKET: noxdew-games
          AWS_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: https://ams3.digitaloceanspaces.com
          SOURCE_DIR: build
          DEST_DIR: demos/${{ steps.repositoryName.outputs.value }}/${{ steps.builder.outputs.buildVersion }}
